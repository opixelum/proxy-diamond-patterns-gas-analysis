[
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__AddSignerFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__InsufficientSigners",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__InvalidNonce",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__MessageValueMismatch",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__QuorumNotReached",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__RecoveredSignerNotAuthorized",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__RemoveSignerFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__SignerAlreadySigned",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAMultisigWallet__SignerLimitReached",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address payable",
            "name": "target",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "delegate",
            "type": "bool"
          }
        ],
        "internalType": "struct IECDSAMultisigWalletInternal.Parameters",
        "name": "parameters",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "internalType": "struct IECDSAMultisigWalletInternal.Signature[]",
        "name": "signatures",
        "type": "tuple[]"
      }
    ],
    "name": "verifyAndExecute",
    "outputs": [
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  }
]
